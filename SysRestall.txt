6.6 Maven 
    6.6.1 Maven 官网下载: https://maven.apache.org/download.cgi
    6.6.2 Maven 库(Maven repository 用于下载项目所使用的 jar,这样的网络库有很多,这只是其一),地址: https://mvnrepository.com/
    6.6.3 Maven 本地安装: 将官网下载的压缩文件解压即可,其所在的位置(路径)即为安装路径
    6.6.4 Maven 本地仓库位置配置: windows 下 Maven 的默认本地仓库位置在 C:\Users\${user}\.m2\repository 
        /* ${user} 为计算机的用户名 */
        修改: 打开 ${maven解压路径}\apache-maven-3.5.0\conf 下的 settings.xml -- 找到 localRepository 选项(默认是被注释掉的) 
        在下边添加 <localRepository>${yourPath}\mavenPepository</localRepository> -- 保存即可
    6.6.5 Maven 限制 JDK 版本为 1.5 (在使用 Eclipse 导入外部 Maven 项目的时候,会出现 jdk版本被限制在 1.5的情况,修改项目 jdk 无效,
        更新 Maven project 无效)
        修改方式: 
        第 1 种: 修改 Maven jdk 版本：
            在 Maven 配置文件,还是刚才的 settings.xml 文件, 找到 profiles,在其目录下添加
            <profile>   
                <id>jdk1.6</id>    
                <activation>   
                    <activeByDefault>true</activeByDefault>    
                    <jdk>1.6</jdk>   
                </activation>    
                <properties>   
                    <maven.compiler.source>1.6</maven.compiler.source>    
                    <maven.compiler.target>1.6</maven.compiler.target>    
                    <maven.compiler.compilerVersion>1.6</maven.compiler.compilerVersion>   
                </properties>   
            </profile> 
            其中 1.6 为 jdk 版本号,可根据需要修改为自己当前的 jdk 版本
            在这一项中, Maven 的配置文件中已经包含了关于 jdk 版本的设置,只是将其注释了而已,就在 profiles 设置项下,看得懂的话可以
            直接将注释打开,修改相关版本号即可
        第 2 种: 修改 Maven 项目的 pom.xml 配置文件
            在 pom.xml 文件中添加: 
            <build>  
                <plugins>  
                    <plugin>  
                        <groupId>org.apache.maven.plugins</groupId>  
                        <artifactId>maven-compiler-plugin</artifactId>  
                        <configuration>  
                            <source>1.8</source>  
                            <target>1.8</target>  
                        </configuration>  
                    </plugin>  
                </plugins>  
            </build>
        推荐使用第二种方法,第一种方法会将 jdk 版本固定,而在实际开发中可能需要多个版本的 jdk ,因此，修改项目中的 pom.xml 
        文件的话,将项目不受本地 Maven 对 jdk 的限制,而且在项目的复制过程中也不会出现 jdk 不兼容现象
    6.6.6 Eclipse 下配置本地 Maven 仓库 (本地不安装 Maven ，Eclipse 的 Maven 插件将使用默认的 Maven 仓库位置,
        即: windows 下 Maven 的默认本地仓库位置在 C:\Users\${user}\.m2\repository )
        修改: Eclipse -- window -- preferences -- Maven -- 搜索找到 Maven 项 -- 展开 Maven 设置项 -- user settings -- 
           在 user setting 项选择 Browse -- 选中 Maven 的 settings.xml 文件 -- 保存(Apply and close) -- 可以将原来的默认仓库
        

​	         



​            












