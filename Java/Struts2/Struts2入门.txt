1、拷贝struts.xml文件
    拷贝目录：Java Resources--src
2、拷贝Struts 的jar文件
    源目录：\struts-2.3.30\lib
    目标目录：/WebContent/WEB-INF/lib
3、配置web.xml文件
    将filter部分拷贝到web.xml文件中

    <filter>
    <filter-name>struts2</filter-name>
    <filter-class>
        org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
4、修改、配置struts.xml文件
    //一下为最基本一个Demo
    <struts>
        <package name="default" namespace="/" extends="struts-default">
            <action name="login">
            <result name="success">/Login.jsp</result>
            </action>
        </package>
    </struts> 
5、Struts常量定义
    <constant name="struts.devMobe" value="true"></constant>
    //意为开发模式，对数据进行修改而无需重启服务器(热修改)
    //实测Tomcat7 Struts2.3.2不支持
6、查看Struts源码、API文档
    源码位置：\struts-2.3.30\src\core\src\main\java
    API文档：\struts-2.3.30\docs\struts2-core-apidocs
    //文档位置改变，在项目中不能实时更新
    //文档位置支持中文
7、编写Struts.xml文件时自动提示
    window--preferences--搜索catalog--xml catalog--add--key:http://struts.apache.org/dtds/struts-2.3.dtd
    location:file System:E:\\struts-2.3.30\lib\struts2-core-2.3.30\struts-2.3.dtd
    key type :URI
8、namespace决定访问路径
    namespace="",可以访问任意路径的action
    namespace="/",可以访问指定路径的action
9、项目拷贝
    本机项目(不在工作)：file--import--General/Existing Projects into Workspace
    --Broser
    本机项目(工作空间):Ctrl + C--Ctrl + V --修改项目名--右键项目--Properties--
    搜索web--Web Project Setting--将原来的项目名修改为现在的项目名
10、定义Action类的3种方法
    (1)自己创建一个普通的类，里边包含public String execute()方法
    (2)实现Action接口,重写execute()方法
    (3)继承Actionsuport类,重写execute()方法
    //推荐使用第三种方法,因为ActionSupport类中已经实现Action接口，并且
    本身封装了很多丰富的方法
11、Struts1和Struts2在Action实现方面的区别
    Struts1定义的Action类在每一次访问时都会是同一个Action类，只有一个实例，
    多个用户访问的时候，会出现线程同步问题
    Struts2定义的Action类在服务器的每一次访问的时候都会new一个Action实例出来，
    这样就可以避免线程同步问题
12、Struts2中的访问路径问题：
    Struts2中的访问路径是根据Action的路径而不是JSP的路径来确定，所以尽量不要使用相对路径
    统一使用绝对路径进行访问(在访问标签上添加或者整个页面使用指定basePath)
	路径获取：<% String path = request.getContextPath();
    	String basePath = request.getScheme()+ "://" + request.getServerName()+":"
    		+ request.getServerPort() + path +"/";
    %>
	路径添加：<base href="<%=basePath%>"/>
13、Struts2中的文件上传
    struts2中有专门的文件上传,但是其默认上传文件最大为2M(上传超出2M的文件后台报错)
     修改struts.xml:
     常量：<constant name="struts.multipart.maxSize" value="20971520" /> 
     <!-- 设置允许最大值  20MB(1024*1024*20) -->  
     拦截器:
        <interceptor-ref name="fileUpload">  
             <param name="maximumSize">5242880</param>  
        </interceptor-ref>  
        <interceptor-ref name="defaultStack" /> <!-- 默认拦截器栈 --> 
    //这里所有的数值都不能以算式的形式存在(5*1024*1024 错)
14、Action接收前台参数
	在Action中定义参数名与前台一致,并生成set和get方法,则可以直接在后台获取
	对于对象 eg:实体类user,属性name,password,前台user.name,后台定义user,同样生成set和get方法
	后台取值user.name
	对于其后台数据不一致的地方,可以使用对象传输模型,最后生成对象模型(简单来说就是实际的实体类模型只有name
	和password两个属性,但是前台注册有一个确认密码这个参数传到后台,这是可以再定义一个实体类,其中除了name和
	password两个属性之外还有一个confimpassword属性,这个实体类就是对象传输模型DTO:data transform object)
	使用ModelDriven接收参数,需要Action实现ModelDriven<>接口(不常用),这时候需要自己new实体对象,但是不需要生成
	set和get方法
15、接收参数的中文乱码问题
	在struts.xml中配置常量i18n为:GBK/utf-8
16、如何配置Struts中的属性
	参考Struts2-core-xxx.jar中的org.apache.struts2包下的default.properties文件
17、读一个系统源码的顺序:界面 -- 业务 -- 数据库 (一个业务一条线读下来,不要把全部页面读完了再看业务)
18、在没有对Action中的属性进行赋值,但是又在前台使用s:property标签取值是则会获取不到,但是不会报错,因为Struts2
	没有走构造方法,如果使用s:debug标签时,没有对属性进行赋值就会报错
19、项目命名规则
	(1)数据库名:项目名称(eg:example)
	(2)要有数据库表的说明文档
	(3)数据库表命名:通常以"t_"/"_"开头(避免与关键字重名,以t开头是因为Oracle数据库表名不支持"_"开头),表名全用大写或者
		使用驼峰标示(eg:_User,_ShoppingItem 推荐使用)
	(4)数据库表中字段命名原则:就简,保持和属性名一致(尽量不要与数据库命名冲突)
	(5)包命名:
		[1] 按照项目模块命名: 
				eg: com.xxx项目.user.entity
					com.xxx项目.user.action
					com.xxx项目.user.dao
					com.xxx项目.user.service
					
					com.xxx项目.admin.entity
					com.xxx项目.admin.action
					com.xxx项目.admin.dao
					com.xxx项目.admin.service
		[2] 按照项目功能命名(推荐):
				eg: com.xxx项目.entity.user/admin
					com.xxx项目.action.userAction/adminAction
					com.xxx项目.dao.userDao/adminDao
					com.xxx项目.service.userService/adminService
	(6)Action命名:xxxAction
	(7)页面命名:模块名_动作_结果.html/jsp(eg:User_add_success.jsp),对于Struts2而言,可以考虑使用通配符配置(*_*)
20、项目开发顺序(顺序并不固定)
	(1)建立项目界面原型(整体的界面布局)
	(2)建立配置文件(Struts/Hibernate/Spring)
		[1]确定namespace
		[2]确定package
		[3]确定Action的名称
		[4]确定result界面
		[5]根据需要修改原型界面的name(改成可以使用通配符进行配置的形式)
		[6]测试
		[7]做好整体规划
	(3)建立数据库(或者实体类)
	(4)建立实体层
	(5)建立Service层
	(6)单元测试(使用Junit)
21、Strust2继承多个包(Struts.xml extends multi package ):
<struts>
  <package name="employee" extends="struts-default, json-default" namespace="/employee">
 
    <action name="list" method="list" class="org.apache.struts2.showcase.action.EmployeeAction" >
        <result>/empmanager/listEmployees.jsp</result>
        <result type="json">
            <param name="root">employees</param>
        </result>
    </action>
 
  </package>
</struts>	
	
	
	
	