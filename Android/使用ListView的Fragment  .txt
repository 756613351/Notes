1、创建一个ListView的XML
2、创建ListView的每个列表项显示的XML布局
3、创建主页面的布局(使用FragmentLayout布局方式)
4、创建一个Fragmentlist类继承系统Fragment类
5、对ListView进行配置
6、创建一个Activity继承系统Activity，和其他的Fragment使用方法一样使用

代码如下
创建一个ListView的XML
注意：创建的ListView需要创建ID

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >
    
    <TextView   
        android:layout_width="fill_parent"  
        android:layout_height="wrap_content"  
        android:gravity="center"  
        android:text="Titles"  
        />  
      
    <ListView   
        android:id="@+id/mylist"  
        android:layout_width="fill_parent"  
        android:layout_height="wrap_content"  
        />
    
</LinearLayout>

创建ListView的每个列表项显示的XML布局
注意：这里创建的组件页需要ID，便于调用，但是不能对整个XML添加ID来调用
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >
    
    <TextView 
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/title"
        android:textSize="20dp"
        />

</LinearLayout>

创建主页面的布局(使用FragmentLayout布局方式)
这里的FrameLayout需要添加ID

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >
    
    <FrameLayout 
        android:layout_width="match_parent"
        android:layout_height="match_parent"
		android:id="@+id/fragments"
        />
    
</RelativeLayout>

创建一个Fragmentlist类继承系统Fragment类
注意：适配器Adapter在实例化的时候一定要这样配置：
	adapter = new SimpleAdapter(this.getActivity().getApplicationContext(), ....
	如果只有getActivity()依然会报错(很难找出错误的原因)
	
package com.sc.fragment;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.example.listfragment_test.R;

import android.app.Fragment;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;

public class ListFragment1 extends Fragment {

    private String TAG = ListFragment1.class.getName();  
    private ListView listview ;  
    private SimpleAdapter adapter;
    /** 
     * @描述 在onCreateView中加载布局 
     * */
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view=inflater.inflate(R.layout.listfragment1,null);
		listview=(ListView)view.findViewById(R.id.mylist);
		String[] list={"Class1","Class2","Class3","Class4","Class5","Class6"};
//		Fragment中若要使用ListView组件则必须在实例化SimpleAdapter时
//		必须设置this.getActivity().getApplicationContext()
		adapter = new SimpleAdapter(this.getActivity().getApplicationContext(), getData(list), R.layout.listview_item,
		new String[]{"title"}, new int[]{R.id.title}); 
		listview.setAdapter(adapter);
		Log.i(TAG, "--------onCreateView");
		return view;
	}
	
	
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Log.i(TAG, "--------onCreate");
		}  
	private List<? extends Map<String, ?>> getData(String[] strs) {  
        List<Map<String ,Object>> list = new ArrayList<Map<String,Object>>();  
        for (int i = 0; i < strs.length; i++) {  
            Map<String, Object> map = new HashMap<String, Object>();  
            map.put("title", strs[i]);  
            list.add(map);  
        }  
          
        return list;  
    } 
    
    
}

创建一个Activity继承系统Activity，和其他的Fragment使用方法一样使用

package com.example.listfragment_test;

import com.sc.fragment.ListFragment1;

import android.app.Activity;
import android.app.FragmentManager;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.Display;
import android.widget.SimpleAdapter;

public class ListFragment_test extends Activity {

	protected void onCreate(Bundle arg0) {
		super.onCreate(arg0);
		setContentView(R.layout.activity_fragments);
		Display display=getWindowManager().getDefaultDisplay();
		ListFragment1 lf1=new ListFragment1();
		FragmentManager manager  = getFragmentManager();  
        manager.beginTransaction().add(R.id.fragments,lf1).commit(); 
	
	}

	
	
}



